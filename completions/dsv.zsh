#compdef dsv

# AUTOMATICALLY GENERATED by `shtab`


_shtab__dsv_commands() {
  local _commands=(
    "\!:pipe multiple dsv commands together"
    "cat:concatenate files by row"
    "cut:select columns"
    "exec:run python on each row"
    "exec-filter:filter rows using python"
    "exec-groupby:aggregate rows using python"
    "flip:prints each column on a separate line"
    "fromjson:convert from json"
    "frommarkdown:convert from markdown table"
    "grep:print lines that match patterns"
    "head:output the first lines"
    "join:join lines of two files on a common field"
    "page:view the file in a pager"
    "paste:concatenate files by column"
    "pipe:pipe rows through a processs"
    "pretty:pretty prints the file"
    "replace:replace text"
    "reshape-long:reshape to long format"
    "reshape-wide:reshape to wide format"
    "set-header:sets the header labels"
    "sort:sort the rows"
    "sqlite:use sql on the data"
    "tac:print the file in reverse"
    "tail:output the last lines"
    "tocsv:convert to csv"
    "tojson:convert to json"
    "tomarkdown:convert to markdown table"
    "totsv:convert to tsv"
    "uniq:omit repeated lines"
  )
  _describe 'dsv commands' _commands
}

_shtab__dsv_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv___options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_cat_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-n,--number}"[number all output lines]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::other files to concatenate to stdin:"
)

_shtab__dsv_cut_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-f,--fields}"[select only these fields]:old_style_fields:"
  {-x,--complement}"[exclude, rather than include, field names]"
  {-r,--regex}"[treat fields as regexes]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::select only these fields:"
)

_shtab__dsv_exec_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-q,--quiet}"[do not print errors]"
  "--var[python variable to use to refer to the data (default\: X)]:var:"
  {-b,--bytes}"[do not auto convert data to int, str etc, treat everything as bytes]"
  {-S,--no-slurp}"[run python on one row at a time]"
  {-I,--ignore-errors}"[do not abort on python errors]"
  {-E,--remove-errors}"[remove rows on python errors]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):python statements to run:"
)

_shtab__dsv_exec_filter_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-q,--quiet}"[do not print errors]"
  "--var[python variable to use to refer to the data (default\: X)]:var:"
  {-b,--bytes}"[do not auto convert data to int, str etc, treat everything as bytes]"
  {-I,--ignore-errors}"[do not abort on python errors]"
  "--passthru[print both matching and non-matching lines]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):python statements to run:"
)

_shtab__dsv_exec_groupby_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-q,--quiet}"[do not print errors]"
  "--var[python variable to use to refer to the data (default\: X)]:var:"
  {-b,--bytes}"[do not auto convert data to int, str etc, treat everything as bytes]"
  {-x,--complement}"[exclude, rather than include, field names]"
  "*"{-k,--fields}"[search only on these fields]:fields:"
  {-r,--regex}"[treat fields as regexes]"
  {-I,--ignore-errors}"[do not abort on python errors]"
  {-E,--remove-errors}"[remove rows on python errors]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):python statements to run:"
)

_shtab__dsv_flip_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-n,--lines}"[print the first NUM lines]:lines:"
  "--row-sep[show a separator between the rows]:row_sep:(never always auto)"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_fromjson_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-f,--flatten}"[flatten objects and arrays. (default seperator\: .)]:flatten:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_frommarkdown_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_grep_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "*"{-e,--regexp}"[pattern to search for]:patterns:"
  {-F,--fixed-strings}"[treat all patterns as literals instead of as regular expressions]"
  "*"{-f,--file}"[obtain patterns from FILE, one per line]:file:"
  {-w,--word-regexp}"[select only those matches surrounded by word boundaries]"
  {-x,--field-regexp}"[select only those matches that exactly match the column]"
  {-v,--invert-match}"[select non-matching lines]"
  {-s,--case-sensitive}"[search case sensitively]"
  {-m,--max-count}"[show only the first NUM matching rows]:max_count:"
  "*"{-k,--fields}"[search only on these fields]:fields:"
  {-r,--regex}"[treat fields as regexes]"
  "--complement[exclude, rather than include, field names]"
  "--replace[replaces every match with the given text]:replace:"
  {-n,--line-number}"[show line numbers]"
  "--passthru[print both matching and non-matching lines]"
  {-A,--after-context}"[show NUM lines after each match]:after_context:"
  {-B,--before-context}"[show NUM lines before each match]:before_context:"
  {-C,--context}"[show NUM lines before and after each match]:context:"
  {-c,--count}"[print only the count of matching rows]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::pattern to search for:"
)

_shtab__dsv_head_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-n,--lines}"[print the first NUM lines]:lines:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_join_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "*-1[join on these fields from stdin]:left_fields:"
  "*-2[join on these fields from FILE]:right_fields:"
  "-e[replace missing input fields with STRING]:empty_value:"
  {-r,--regex}"[treat fields as regexes]"
  "--rename-1[rename header from stdin according to this \%-format string]:rename_1:"
  "--rename-2[rename header from FILE according to this \%-format string]:rename_2:"
  "*-a[also print unpairable lines from the given file]:show_all:(1 2)"
  "--join[type of join to perform]:join:(inner left right outer)"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  ":join stdin with FILE:"
  "(*)::join on these fields from stdin and FILE:"
)

_shtab__dsv_page_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_paste_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::other files to concatenate to stdin:"
)

_shtab__dsv_pipe_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "*"{-k,--fields}"[pipe only on these fields]:fields:"
  {-x,--complement}"[exclude, rather than include, field names]"
  {-r,--regex}"[treat fields as regexes]"
  "*"{-a,--append-columns}"[append output as extra fields rather than replacing]:append_columns:"
  {-q,--no-quote-input}"[do not do CSV quoting on the input]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):command to pipe rows through:"
)

_shtab__dsv_pretty_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_replace_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "*"{-e,--regexp}"[pattern to search for]:patterns:"
  {-F,--fixed-strings}"[treat all patterns as literals instead of as regular expressions]"
  "*"{-f,--file}"[obtain patterns from FILE, one per line]:file:"
  {-w,--word-regexp}"[select only those matches surrounded by word boundaries]"
  {-x,--field-regexp}"[select only those matches that exactly match the column]"
  {-v,--invert-match}"[select non-matching lines]"
  {-s,--case-sensitive}"[search case sensitively]"
  {-m,--max-count}"[show only the first NUM matching rows]:max_count:"
  "*"{-k,--fields}"[search only on these fields]:fields:"
  {-r,--regex}"[treat fields as regexes]"
  "--complement[exclude, rather than include, field names]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  ":pattern to search for:"
  ":replaces every match with the given text:"
)

_shtab__dsv_reshape_long_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-x,--complement}"[exclude, rather than include, field names]"
  {-r,--regex}"[treat fields as regexes]"
  {-k,--key}"[name of the key field]:key:"
  {-v,--value}"[name of the value field]:value:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):reshape only these fields:"
)

_shtab__dsv_reshape_wide_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  ":key field:"
  ":value field:"
)

_shtab__dsv_set_header_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "--only[drop all other header names]"
  "*"{-r,--rename}"[rename field A to B]:rename:"
  "--auto[automatically name the headers, only useful if there is no input header]:auto:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::new header names:"
)

_shtab__dsv_sort_options=(
  {-k,--fields}"[search only these fields]:old_style_fields:"
  "(- : *)--help[show this help message and exit]"
  "--regex[treat fields as regexes]"
  {-x,--complement}"[exclude, rather than include, field names]"
  "*"{-b,--ignore-leading-blanks}"[ignore leading blanks]"
  "*--dictionary-order[consider only blanks and alphanumeric characters]"
  "*"{-f,--ignore-case}"[fold lower case to upper case characters]"
  "*"{-g,--general-numeric-sort}"[compare according to general numerical value]"
  "*"{-i,--ignore-nonprinting}"[consider only printable characters]"
  "*"{-M,--month-sort}"[sort by month name e.g. JAN \< DEC]"
  "*"{-h,--human-numeric-sort}"[compare human readable numbers e.g. 4K \< 2G]"
  "*"{-n,--numeric-sort}"[compare according to string numerical value]"
  "*"{-R,--random-sort}"[shuffle, but group identical keys]"
  "*"{-r,--reverse}"[sort in reverse order]"
  "*"{-V,--version-sort}"[natural sort of version numbers within text]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::sort based only on these fields:"
)

_shtab__dsv_sqlite_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-t,--table}"[name of sql table (default\: input)]:table:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*):sql statements to run:"
)

_shtab__dsv_tac_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_tail_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-n,--lines}"[print the first NUM lines]:lines:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_tocsv_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_tojson_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_tomarkdown_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_totsv_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
)

_shtab__dsv_uniq_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-x,--complement}"[exclude, rather than include, field names]"
  {-r,--regex}"[treat fields as regexes]"
  {-c,--count}"[prefix lines by the number of occurrences]"
  {-C,--count-column}"[name of column to put the count in]:count_column:"
  {-H,--header}"[treat first row as a header]"
  {-N,--no-header}"[do not treat first row as header]"
  "--drop-header[do not print the header]"
  "--trailer[print a trailer]:trailer:(never always auto)"
  "--numbered-columns[number the columns in the header]:numbered_columns:(never always auto)"
  {-d,--ifs}"[input field separator]:ifs:"
  "--plain-ifs[treat input field separator as a literal not a regex]"
  {-D,--ofs}"[output field separator]:ofs:"
  "--irs[input row separator]:irs:"
  "--ors[output row separator]:ors:"
  "--csv[treat input as csv]"
  "--tsv[treat input as tsv]"
  "--ssv[treat input as whitespace separated]"
  "--combine-trailing-columns[if a row has more columns than the header, combine the last ones into one, useful with --ssv]"
  {-P,--pretty}"[prettified output]"
  "--page[show output in a pager (less)]"
  {--colour,--color}"[enable colour]:colour:(never always auto)"
  "--header-colour[ansi escape code for the header]:header_colour:"
  "--header-bg-colour[ansi escape code for the header background]:header_bg_colour:"
  "--rainbow-columns[enable rainbow columns]:rainbow_columns:(never always auto)"
  {-Q,--no-quoting}"[do not handle quotes from input]"
  "(*)::check these only fields for uniqueness:"
)


_shtab__dsv() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab__dsv_options[(I)${(q)one_or_more}*]} + ${_shtab__dsv_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab__dsv_options+=(': :_shtab__dsv_commands' '*::: :->dsv')
  fi
  _arguments -C -s $_shtab__dsv_options

  case $state in
    dsv)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab__dsv-$line[1]:"
      case $line[1] in
        !) _arguments -C -s $_shtab__dsv___options ;;
        cat) _arguments -C -s $_shtab__dsv_cat_options ;;
        cut) _arguments -C -s $_shtab__dsv_cut_options ;;
        exec) _arguments -C -s $_shtab__dsv_exec_options ;;
        exec-filter) _arguments -C -s $_shtab__dsv_exec_filter_options ;;
        exec-groupby) _arguments -C -s $_shtab__dsv_exec_groupby_options ;;
        flip) _arguments -C -s $_shtab__dsv_flip_options ;;
        fromjson) _arguments -C -s $_shtab__dsv_fromjson_options ;;
        frommarkdown) _arguments -C -s $_shtab__dsv_frommarkdown_options ;;
        grep) _arguments -C -s $_shtab__dsv_grep_options ;;
        head) _arguments -C -s $_shtab__dsv_head_options ;;
        join) _arguments -C -s $_shtab__dsv_join_options ;;
        page) _arguments -C -s $_shtab__dsv_page_options ;;
        paste) _arguments -C -s $_shtab__dsv_paste_options ;;
        pipe) _arguments -C -s $_shtab__dsv_pipe_options ;;
        pretty) _arguments -C -s $_shtab__dsv_pretty_options ;;
        replace) _arguments -C -s $_shtab__dsv_replace_options ;;
        reshape-long) _arguments -C -s $_shtab__dsv_reshape_long_options ;;
        reshape-wide) _arguments -C -s $_shtab__dsv_reshape_wide_options ;;
        set-header) _arguments -C -s $_shtab__dsv_set_header_options ;;
        sort) _arguments -C -s $_shtab__dsv_sort_options ;;
        sqlite) _arguments -C -s $_shtab__dsv_sqlite_options ;;
        tac) _arguments -C -s $_shtab__dsv_tac_options ;;
        tail) _arguments -C -s $_shtab__dsv_tail_options ;;
        tocsv) _arguments -C -s $_shtab__dsv_tocsv_options ;;
        tojson) _arguments -C -s $_shtab__dsv_tojson_options ;;
        tomarkdown) _arguments -C -s $_shtab__dsv_tomarkdown_options ;;
        totsv) _arguments -C -s $_shtab__dsv_totsv_options ;;
        uniq) _arguments -C -s $_shtab__dsv_uniq_options ;;
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab__dsv -N dsv
else
  # autoload from fpath, call function directly
  _shtab__dsv "$@"
fi
