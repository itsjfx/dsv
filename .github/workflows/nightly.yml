name: Nightly Release

on:
  schedule:
    - cron: '0 5 * * *'  # Run daily at 5:00 AM UTC
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, name: dsv-nightly-x86_64-linux.tar.gz }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, name: dsv-nightly-aarch64-linux.tar.gz }
          - { target: x86_64-apple-darwin, os: macos-latest, name: dsv-nightly-x86_64-macos.tar.gz }
          - { target: aarch64-apple-darwin, os: macos-latest, name: dsv-nightly-aarch64-macos.tar.gz }

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

      - name: Build release
        env:
          BUILD_TARGET: ${{ matrix.target }}
        run: cargo build --release --target "$BUILD_TARGET"

      - name: Package binary
        env:
          BUILD_TARGET: ${{ matrix.target }}
          PACKAGE_NAME: ${{ matrix.name }}
        run: |
          mkdir -p package
          cp "target/$BUILD_TARGET/release/dsv" package/
          cd package
          tar czf "../$PACKAGE_NAME" *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create nightly release
        run: ./scripts/create-nightly-release.sh
