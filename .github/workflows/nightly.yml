name: Nightly Release

on:
  schedule:
    - cron: '0 5 * * *'  # Run daily at 5:00 AM UTC
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/actions/how-tos/write-workflows/choose-where-workflows-run/choose-the-runner-for-a-job#standard-github-hosted-runners-for-public-repositories
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, name: dsv-nightly-x86_64-linux }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-24.04-arm, name: dsv-nightly-aarch64-linux }
          - { target: x86_64-apple-darwin, os: macos-latest, name: dsv-nightly-x86_64-macos }
          - { target: aarch64-apple-darwin, os: macos-latest, name: dsv-nightly-aarch64-macos }

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        env:
          BUILD_TARGET: ${{ matrix.target }}
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup target add "$BUILD_TARGET"

      - name: Build and package
        env:
          BUILD_TARGET: ${{ matrix.target }}
          PACKAGE_NAME: ${{ matrix.name }}
        run: ./build.sh "$BUILD_TARGET" "$PACKAGE_NAME"

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    needs: build
    if: always()
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        continue-on-error: true

      - name: Create nightly release
        run: ./release.sh
